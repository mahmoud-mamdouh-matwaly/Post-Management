{"version":3,"file":"static/js/584.8d7edd8f.chunk.js","mappings":"+NAIMA,EAAa,SAAAC,GACjB,IAAAC,EAA+FD,EAAvFE,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAAEE,EAA4EH,EAA5EG,QAAOC,EAAqEJ,EAAnEK,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAAiDN,EAA/CO,KAAAA,OAAI,IAAAD,EAAG,UAASA,EAAAE,EAA+BR,EAA7BS,QAAAA,OAAO,IAAAD,GAAQA,EAAKE,GAAIC,EAAAA,EAAAA,GAAKX,EAAKY,GAEpG,OACEC,EAAAA,EAAAA,KAACC,EAAAA,IAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACR,KAAMA,EAAME,QAASA,EAASN,QAASA,EAASa,SAAUX,GAAgBK,GAAI,IAAAO,SACnFf,IAGP,EAEA,KAAegB,EAAAA,EAAAA,MAAKnB,E,4ECepB,IAzBoB,WAClB,IAEyCoB,GAArCC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS,IADtCC,MAAShB,EAAIY,EAAJZ,KAAeL,EAAIiB,EAAbK,QAGjBC,EAAoCD,EAAAA,GAAAA,aAAoBE,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAjDG,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAiBhC,OAfAI,EAAAA,EAAAA,YAAU,WACK,UAATvB,GAA6B,iBAATA,GACtBqB,EAAWG,KAAK,CACdxB,KAAM,QACNyB,QAAS9B,IAGA,YAATK,GACFqB,EAAWG,KAAK,CACdxB,KAAM,UACNyB,QAAS9B,GAGf,GAAG,CAACqB,SAEGV,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAhB,SAAGY,GACZ,C,kHCrBQK,EAAUC,EAAAA,EAAAA,MAEZC,EAAc,SAAApC,GAClB,IAAAqC,EAAqFrC,EAA7EsC,mBAAAA,OAAkB,IAAAD,EAAG,WAAO,EAACA,EAAEE,EAA8CvC,EAA9CuC,MAAKC,EAAyCxC,EAAvCyC,QAAAA,OAAO,IAAAD,GAAQA,EAAAE,EAAwB1C,EAAtB2C,UAAAA,OAAS,IAAAD,GAAQA,EAC1EE,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,MAAO,SAAUC,QAAQ,gBAAgBC,MAAO,CAAEC,OAAQ,QAASlC,SAAA,EACtEJ,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAAnC,UACF6B,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAAApC,SAAA,CACHwB,GAAU5B,EAAAA,EAAAA,KAACyC,EAAAA,EAAiB,CAACnD,QAAS,kBAAMyC,GAAU,EAAE,IAAO,MAEhE/B,EAAAA,EAAAA,KAACqB,EAAK,CAACqB,MAAO,EAAGL,MAAO,CAAEM,eAAgB,EAAGC,kBAAmB,IAAKxC,SAClEsB,SAINI,GACC9B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAAAnC,UACFJ,EAAAA,EAAAA,KAAC6C,EAAAA,EAAK,CAACC,YAAY,mBAAmBC,SAAUtB,MAEhD,OAGV,EAEA,KAAepB,EAAAA,EAAAA,MAAKkB,E,iNChCPyB,EAAU,CACrB,CACEtB,MAAO,QACPuB,UAAW,QACXC,IAAK,SAEP,CACExB,MAAO,eACPuB,UAAW,OACXC,IAAK,S,wKCLDC,EAAaC,EAAAA,EAAAA,SA6CrB,EA3CkB,SAAAjE,GAChB,IACEkE,EAUElE,EAVFkE,YACAC,EASEnE,EATFmE,UACAC,EAQEpE,EARFoE,aACAC,EAOErE,EAPFqE,aACApD,EAMEjB,EANFiB,SAAQqD,EAMNtE,EALFuC,MAAAA,OAAK,IAAA+B,EAAG,GAAEA,EACVC,EAIEvE,EAJFuE,OAAMC,EAIJxE,EAHFyE,OAAAA,OAAM,IAAAD,GAAQA,EAAApE,EAGZJ,EAFFK,WAAAA,OAAU,IAAAD,GAAQA,EACfM,GAAIC,EAAAA,EAAAA,GACLX,EAAKY,GACD8D,EAAUV,IAAVU,MAER,OACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,GAAK5D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJwB,MAAOA,EACPR,KAAMmC,EACNU,KAAMP,EACNQ,SAAUT,EACVG,OAAQA,EACRO,eAAgBX,EAChBY,cAAc,EACdC,OAAQ,EACNnE,EAAAA,EAAAA,KAACd,EAAAA,EAAU,CAAYQ,KAAK,UAAU0E,GAAIP,EAAMQ,WAAY/E,QAASiE,EAAclE,KAAK,UAAxE,SAChBW,EAAAA,EAAAA,KAACd,EAAAA,EAAU,CAETQ,KAAK,UACLL,KAAMqE,EACNE,OAAQA,EACRhE,QAAS0D,EACThE,QAASkE,EACThE,WAAYA,GANR,YASJK,GAAI,IAAAO,SAEPA,IAGP,EC3BQkE,EAAShD,EAAAA,EAAAA,KAEXiD,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,8DAA0B,IAE/CrB,EAAaC,EAAAA,EAAAA,SAsHrB,EApHkB,WAChB,IAAMrB,GAAWC,EAAAA,EAAAA,MACjByC,GAAmElE,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMkE,YAAY,IAAlGC,EAAIF,EAAJE,KAAMrB,EAASmB,EAATnB,UAAWsB,EAAWH,EAAXG,YAAaC,EAAUJ,EAAVI,WAAYC,EAAYL,EAAZK,aAEvCpF,GACPa,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAS,IADtCC,MAAShB,KAELqF,GAAWC,EAAAA,EAAAA,MAGNC,EACP9B,IADFU,MAASoB,iBAEXC,GAAkCC,EAAAA,EAAAA,UAAS,CAAEC,QAAQ,EAAOC,GAAI,KAAMC,KAAM,OAAOC,GAAAzE,EAAAA,EAAAA,GAAAoE,EAAA,GAA5EM,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,GAAkBC,EAAAA,EAAAA,cAAY,SAAAL,GAClCP,GAASa,EAAAA,EAAAA,IAAYN,IACrBvD,EAAS,kCAAD8D,OAAmCP,EAAKD,IAClD,GAAG,IAEGS,GAAeH,EAAAA,EAAAA,cAAY,SAAAL,GAC/BG,GAAa,SAAAM,GACX,OAAA7F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6F,GAAI,IACPX,QAASW,EAAKX,OACdC,GAAQ,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMD,IAEd,GACF,GAAG,IAEGW,GAAcC,EAAAA,EAAAA,UAAQ,WAC1B,IAAMC,EAAgB,CACpBxE,MAAO,SACPwB,IAAK,YACLiD,MAAO,QACPC,MAAO,IACPC,OAAQ,SAAAC,GACN,OACErE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACE,QAAS,gBAAgBhC,SAAA,EAC5BJ,EAAAA,EAAAA,KAACd,EAAAA,EAAU,CAACqH,UAAU,MAAM7G,KAAK,OAAO8G,MAAMxG,EAAAA,EAAAA,KAACyG,EAAAA,EAAU,IAAKnH,QAAS,kBAAMoG,EAAgBY,EAAI,KACjGtG,EAAAA,EAAAA,KAACd,EAAAA,EAAU,CAACqH,UAAU,MAAM7G,KAAK,OAAO8G,MAAMxG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAY,IAAK9C,QAAM,EAACtE,QAAS,kBAAMwG,EAAaQ,EAAI,MAG7G,GAEF,MAAM,GAANT,QAAAc,EAAAA,EAAAA,GAAW3D,GAAO,EAAA9C,EAAAA,EAAAA,GAAA,GAAOgG,IAC3B,GAAG,KAEHjF,EAAAA,EAAAA,YAAU,WACC,OAAJ0D,QAAI,IAAJA,GAAAA,EAAMiC,QACT7B,GAAS8B,EAAAA,EAAAA,MAEb,GAAG,CAAClC,IAEJ,IAAMmC,GAAoBnB,EAAAA,EAAAA,cACxB,SAAAoB,GACEhC,GAASiC,EAAAA,EAAAA,IAAeD,GAC1B,GACA,CAAChC,IAGGtD,GAAqBkE,EAAAA,EAAAA,cACzB,SAAAsB,GACElC,GAASmC,EAAAA,EAAAA,IAAcD,EAAME,OAAOC,OACtC,GACA,CAACrC,IAOGxB,EAAe,WACnB8D,QAAQC,IAAI,UACZ7B,EAAa,CACXL,QAAQ,EACRC,GAAI,KACJC,KAAM,MAEV,GAEArE,EAAAA,EAAAA,YAAU,WACa,YAAjB6D,IACFvB,IACAwB,GAASwC,EAAAA,EAAAA,OAEb,GAAG,CAACzC,IAEJ,IAAM0C,GAAgBvB,EAAAA,EAAAA,UAAQ,WAC5B,OAAOtB,EAAK8C,QAAO,SAAAC,GAAI,OAAIA,EAAKhG,MAAMiG,cAAcC,SAAS/C,EAAW8C,cAAc,GACxF,GAAG,CAAC9C,EAAYF,IAEhB,OACE1C,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACqF,UAAU,WAAWxF,MAAO,CAAEyF,WAAY7C,EAAkBmB,MAAO,QAAShG,SAAA,EACjFJ,EAAAA,EAAAA,KAACuB,EAAAA,EAAW,CAACG,MAAM,QAAQI,WAAW,EAAML,mBAAoBA,KAChEzB,EAAAA,EAAAA,KAAC+H,EAAAA,SAAQ,CAACC,UAAUhI,EAAAA,EAAAA,KAACiI,EAAAA,EAAI,IAAI7H,UAC3BJ,EAAAA,EAAAA,KAACuE,EAAS,CACRI,KAAM6C,EACNxE,QAASgD,EACTpG,QAAS0D,EACT4E,eAAgBpB,EAChBlC,YAAaA,EACbuD,OAAO,SAGVzI,GAAOM,EAAAA,EAAAA,KAACoI,EAAAA,EAAW,IAAM,MAE1BpI,EAAAA,EAAAA,KAACqI,EAAe,CACd9E,aAAcA,EACdC,aAzCyB,WAC7BuB,GAASuD,EAAAA,EAAAA,IAAe,CAAEjD,GAAIG,EAAUH,KAC1C,EAwCMG,UAAWA,EACXlC,UAAWA,EACXM,QAAQ,MAIhB,EAIA,SAASyE,EAAgBlJ,GACvB,IAAQoE,EAAqDpE,EAArDoE,aAAcC,EAAuCrE,EAAvCqE,aAAcgC,EAAyBrG,EAAzBqG,UAAWlC,EAAcnE,EAAdmE,UAE/C,OACEtD,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAhB,UACEJ,EAAAA,EAAAA,KAACuI,EAAS,CACRhF,aAAcA,EACdC,aAAcA,EACdH,YAAamC,EAAUJ,SAAWI,EAAUF,KAC5C5B,OAAO,SACPJ,UAAWA,EACXM,QAAQ,EAAKxD,UAEbJ,EAAAA,EAAAA,KAACsE,EAAI,CAAAlE,SAAC,mDAId,C","sources":["components/button/index.jsx","components/message/index.js","pages/posts/components/page-heading.jsx","pages/posts/columns.js","components/modal/index.jsx","pages/posts/index.jsx"],"sourcesContent":["import { Button } from 'antd';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst BaseButton = props => {\n  const { text = '', onClick, isDisabled = false, type = 'primary', loading = false, ...rest } = props;\n\n  return (\n    <Button type={type} loading={loading} onClick={onClick} disabled={isDisabled} {...rest}>\n      {text}\n    </Button>\n  );\n};\n\nexport default memo(BaseButton);\n\nBaseButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  type: PropTypes.string,\n  loading: PropTypes.bool,\n};\n","import React, { useEffect } from 'react';\nimport { message } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst BaseMessage = () => {\n  const {\n    alert: { type, message: text },\n  } = useSelector(state => state.uiReducer);\n\n  const [messageApi, contextHolder] = message.useMessage();\n\n  useEffect(() => {\n    if (type === 'error' || type === 'networkError') {\n      messageApi.open({\n        type: 'error',\n        content: text,\n      });\n    }\n    if (type === 'success') {\n      messageApi.open({\n        type: 'success',\n        content: text,\n      });\n    }\n  }, [alert]);\n\n  return <>{contextHolder}</>;\n};\n\nexport default BaseMessage;\n","import { Row, Col, Typography, Input, Space } from 'antd';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst { Title } = Typography;\n\nconst PageHeading = props => {\n  const { handleChangeSearch = () => {}, title, hasBack = false, hasSearch = false } = props;\n  const navigate = useNavigate();\n\n  return (\n    <Row align={'middle'} justify=\"space-between\" style={{ height: '62px' }}>\n      <Col>\n        <Space>\n          {hasBack ? <ArrowLeftOutlined onClick={() => navigate(-1)} /> : null}\n\n          <Title level={4} style={{ marginBlockEnd: 0, marginInlineStart: 10 }}>\n            {title}\n          </Title>\n        </Space>\n      </Col>\n      {hasSearch ? (\n        <Col>\n          <Input placeholder=\"Search for Posts\" onChange={handleChangeSearch} />\n        </Col>\n      ) : null}\n    </Row>\n  );\n};\n\nexport default memo(PageHeading);\n\nPageHeading.propTypes = {\n  handleChangeSearch: PropTypes.func,\n  title: PropTypes.string,\n  hasBack: PropTypes.bool,\n  hasSearch: PropTypes.bool,\n};\n","export const columns = [\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title',\n  },\n  {\n    title: 'Descriptions',\n    dataIndex: 'body',\n    key: 'body',\n  },\n];\n","import { Modal, theme } from 'antd';\nimport PropTypes from 'prop-types';\nimport BaseButton from 'components/button';\n\nconst { useToken } = theme;\n\nconst BaseModal = props => {\n  const {\n    isModalOpen,\n    isLoading,\n    handleCancel,\n    handleSubmit,\n    children,\n    title = '',\n    okText,\n    danger = false,\n    isDisabled = false,\n    ...rest\n  } = props;\n  const { token } = useToken();\n\n  return (\n    <Modal\n      title={title}\n      open={isModalOpen}\n      onOk={handleSubmit}\n      onCancel={handleCancel}\n      okText={okText}\n      confirmLoading={isLoading}\n      maskClosable={false}\n      footer={[\n        <BaseButton key=\"back\" type=\"default\" bg={token.colorLight} onClick={handleCancel} text=\"Cancel\" />,\n        <BaseButton\n          key=\"submit\"\n          type=\"primary\"\n          text={okText}\n          danger={danger}\n          loading={isLoading}\n          onClick={handleSubmit}\n          isDisabled={isDisabled}\n        />,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nexport default BaseModal;\n\nBaseModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleSubmit: PropTypes.func,\n  handleCancel: PropTypes.func,\n  isLoading: PropTypes.bool,\n  children: PropTypes.node,\n  title: PropTypes.string,\n  okText: PropTypes.string,\n  danger: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n","import { useEffect, Suspense, lazy, useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { DeleteFilled, EditFilled } from '@ant-design/icons';\nimport { Spin, Row, Space, theme, Typography } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport {\n  fetchPosts,\n  setPostItem,\n  setCurrentPage,\n  setSearchTerm,\n  deletePostItem,\n  resetDeleteStatus,\n} from './store/slice';\nimport { columns } from './columns';\nimport BaseButton from 'components/button';\nimport BaseMessage from 'components/message';\nimport PageHeading from './components/page-heading';\nimport BaseModal from 'components/modal';\nconst { Text } = Typography;\n\nconst BaseTable = lazy(() => import('components/table'));\n\nconst { useToken } = theme;\n\nconst PostsPage = () => {\n  const navigate = useNavigate();\n  const { data, isLoading, currentPage, searchTerm, deleteStatus } = useSelector(state => state.postsReducer);\n  const {\n    alert: { type },\n  } = useSelector(state => state.uiReducer);\n  const dispatch = useDispatch();\n\n  const {\n    token: { colorBgContainer },\n  } = useToken();\n  const [showModal, setShowModal] = useState({ isOpen: false, id: null, item: null });\n\n  const handleClickEdit = useCallback(item => {\n    dispatch(setPostItem(item));\n    navigate(`/posts-management/post-details/${item.id}`);\n  }, []);\n\n  const handleDelete = useCallback(item => {\n    setShowModal(prev => {\n      return {\n        ...prev,\n        isOpen: !prev.isOpen,\n        id: item?.id,\n      };\n    });\n  }, []);\n\n  const memoColumns = useMemo(() => {\n    const columnActions = {\n      title: 'Action',\n      key: 'operation',\n      fixed: 'right',\n      width: 120,\n      render: row => {\n        return (\n          <Row justify={'space-between'}>\n            <BaseButton className=\"btn\" type=\"text\" icon={<EditFilled />} onClick={() => handleClickEdit(row)} />\n            <BaseButton className=\"btn\" type=\"text\" icon={<DeleteFilled />} danger onClick={() => handleDelete(row)} />\n          </Row>\n        );\n      },\n    };\n    return [...columns, { ...columnActions }];\n  }, []);\n\n  useEffect(() => {\n    if (!data?.length) {\n      dispatch(fetchPosts());\n    }\n  }, [data]);\n\n  const handleCurrentPage = useCallback(\n    current => {\n      dispatch(setCurrentPage(current));\n    },\n    [dispatch]\n  );\n\n  const handleChangeSearch = useCallback(\n    event => {\n      dispatch(setSearchTerm(event.target.value));\n    },\n    [dispatch]\n  );\n\n  const handleSubmitDeletePost = () => {\n    dispatch(deletePostItem({ id: showModal.id }));\n  };\n\n  const handleCancel = () => {\n    console.log('object');\n    setShowModal({\n      isOpen: false,\n      id: null,\n      item: null,\n    });\n  };\n\n  useEffect(() => {\n    if (deleteStatus === 'success') {\n      handleCancel();\n      dispatch(resetDeleteStatus());\n    }\n  }, [deleteStatus]);\n\n  const filteredPosts = useMemo(() => {\n    return data.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [searchTerm, data]);\n\n  return (\n    <Space direction=\"vertical\" style={{ background: colorBgContainer, width: '100%' }}>\n      <PageHeading title=\"Posts\" hasSearch={true} handleChangeSearch={handleChangeSearch} />\n      <Suspense fallback={<Spin />}>\n        <BaseTable\n          data={filteredPosts}\n          columns={memoColumns}\n          loading={isLoading}\n          getCurrentPage={handleCurrentPage}\n          currentPage={currentPage}\n          rowKey=\"id\"\n        />\n      </Suspense>\n      {type ? <BaseMessage /> : null}\n\n      <ModalsContainer\n        handleCancel={handleCancel}\n        handleSubmit={handleSubmitDeletePost}\n        showModal={showModal}\n        isLoading={isLoading}\n        danger={true}\n      />\n    </Space>\n  );\n};\n\nexport default PostsPage;\n\nfunction ModalsContainer(props) {\n  const { handleCancel, handleSubmit, showModal, isLoading } = props;\n\n  return (\n    <>\n      <BaseModal\n        handleCancel={handleCancel}\n        handleSubmit={handleSubmit}\n        isModalOpen={showModal.isOpen && !showModal.item}\n        okText=\"Delete\"\n        isLoading={isLoading}\n        danger={true}\n      >\n        <Text>Are you sure, you want to delete this post?</Text>\n      </BaseModal>\n    </>\n  );\n}\n\nModalsContainer.propTypes = {\n  handleCancel: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  showModal: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    item: PropTypes.object,\n    id: PropTypes.number,\n  }),\n  isLoading: PropTypes.bool,\n};\n"],"names":["BaseButton","props","_props$text","text","onClick","_props$isDisabled","isDisabled","_props$type","type","_props$loading","loading","rest","_objectWithoutProperties","_excluded","_jsx","Button","_objectSpread","disabled","children","memo","_useSelector$alert","useSelector","state","uiReducer","alert","message","_message$useMessage","_message$useMessage2","_slicedToArray","messageApi","contextHolder","useEffect","open","content","_Fragment","Title","Typography","PageHeading","_props$handleChangeSe","handleChangeSearch","title","_props$hasBack","hasBack","_props$hasSearch","hasSearch","navigate","useNavigate","_jsxs","Row","align","justify","style","height","Col","Space","ArrowLeftOutlined","level","marginBlockEnd","marginInlineStart","Input","placeholder","onChange","columns","dataIndex","key","useToken","theme","isModalOpen","isLoading","handleCancel","handleSubmit","_props$title","okText","_props$danger","danger","token","Modal","onOk","onCancel","confirmLoading","maskClosable","footer","bg","colorLight","Text","BaseTable","lazy","_useSelector","postsReducer","data","currentPage","searchTerm","deleteStatus","dispatch","useDispatch","colorBgContainer","_useState","useState","isOpen","id","item","_useState2","showModal","setShowModal","handleClickEdit","useCallback","setPostItem","concat","handleDelete","prev","memoColumns","useMemo","columnActions","fixed","width","render","row","className","icon","EditFilled","DeleteFilled","_toConsumableArray","length","fetchPosts","handleCurrentPage","current","setCurrentPage","event","setSearchTerm","target","value","console","log","resetDeleteStatus","filteredPosts","filter","post","toLowerCase","includes","direction","background","Suspense","fallback","Spin","getCurrentPage","rowKey","BaseMessage","ModalsContainer","deletePostItem","BaseModal"],"sourceRoot":""}