{"version":3,"file":"static/js/584.2a2ff202.chunk.js","mappings":"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","sources":["components/button/index.jsx","components/message/index.js","components/input/index.jsx","pages/posts/components/form.jsx","pages/posts/components/page-heading.jsx","pages/posts/columns.js","components/modal/index.jsx","pages/posts/index.jsx"],"sourcesContent":["import { Button } from 'antd';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst BaseButton = props => {\n  const { text = '', onClick, isDisabled = false, type = 'primary', loading = false, ...rest } = props;\n\n  return (\n    <Button type={type} loading={loading} onClick={onClick} disabled={isDisabled} {...rest}>\n      {text}\n    </Button>\n  );\n};\n\nexport default memo(BaseButton);\n\nBaseButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  type: PropTypes.string,\n  loading: PropTypes.bool,\n};\n","import React, { useEffect } from 'react';\nimport { message } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst BaseMessage = () => {\n  const {\n    alert: { type, message: text },\n  } = useSelector(state => state.uiReducer);\n\n  const [messageApi, contextHolder] = message.useMessage();\n\n  useEffect(() => {\n    if (type === 'error' || type === 'networkError') {\n      messageApi.open({\n        type: 'error',\n        content: text,\n      });\n    }\n    if (type === 'success') {\n      messageApi.open({\n        type: 'success',\n        content: text,\n      });\n    }\n  }, [alert]);\n\n  return <>{contextHolder}</>;\n};\n\nexport default BaseMessage;\n","import { Input, Form } from 'antd';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst BaseInput = props => {\n  const {\n    placeholder,\n    label,\n    message,\n    isRequired = true,\n    name,\n    error,\n    prefix,\n    value,\n    disabled = false,\n    rule,\n    inputType = 'text',\n    suffix,\n    ...rest\n  } = props;\n\n  return (\n    <Form.Item\n      name={name}\n      label={label}\n      rules={[\n        {\n          required: isRequired,\n          message: message,\n          ...rule,\n        },\n      ]}\n      validateStatus={error ? 'error' : ''}\n      help={error}\n      {...rest}\n    >\n      <Input\n        disabled={disabled}\n        data-testid={name}\n        value={value ?? ''}\n        name={name}\n        placeholder={placeholder}\n        prefix={prefix}\n        type={inputType}\n        suffix={suffix}\n        style={{ height: '40px' }}\n      />\n    </Form.Item>\n  );\n};\n\nexport default memo(BaseInput);\n\nBaseInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  message: PropTypes.string,\n  name: PropTypes.string,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  prefix: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  rule: PropTypes.object,\n  inputType: PropTypes.string,\n  suffix: PropTypes.node,\n};\n","import { useEffect, memo, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Col, Row, Input, Space } from 'antd';\nimport BaseButton from 'components/button';\nimport BaseInput from 'components/input';\nconst { TextArea } = Input;\n\nconst PostForm = props => {\n  const [form] = Form.useForm();\n  const [disabled, setDisabled] = useState(true);\n  const { postItem, handleSubmit = () => {}, isView = false } = props;\n\n  useEffect(() => {\n    if (postItem) {\n      form.setFieldsValue(postItem);\n    }\n  }, [postItem]);\n\n  const onFieldsChange = useCallback(() => {\n    setDisabled(false);\n  }, []);\n\n  const onFinish = useCallback(() => {\n    form\n      .validateFields()\n      .then(values => {\n        let item = {\n          ...values,\n        };\n        handleSubmit(item);\n      })\n      .catch(error => {\n        const errors = error.errorFields.filter(field => {\n          return field.errors.length;\n        });\n        if (errors.length) return;\n      });\n  }, []);\n\n  return (\n    <Form form={form} name=\"form\" layout={'vertical'} onFinish={onFinish} onFieldsChange={onFieldsChange}>\n      <Space.Compact direction={isView ? 'vertical' : 'horizontal'} block>\n        <Col flex={'0 1 100%'} style={{ marginInline: 5 }}>\n          <BaseInput placeholder=\"title\" name=\"title\" label=\"Title\" message=\"Title is required\" disabled={isView} />\n        </Col>\n        <Col flex={'0 1 100%'} style={{ marginInline: 5 }}>\n          <Form.Item\n            name=\"body\"\n            label=\"Descriptions\"\n            rules={[\n              {\n                required: true,\n                message: 'Descriptions is required',\n              },\n            ]}\n          >\n            <TextArea rows={4} disabled={isView} />\n          </Form.Item>\n        </Col>\n      </Space.Compact>\n      {!isView ? (\n        <Row gutter={[10, 10]} align={'end'}>\n          <BaseButton type=\"primary\" htmlType=\"submit\" text=\"Submit\" isDisabled={disabled} />\n        </Row>\n      ) : null}\n    </Form>\n  );\n};\n\nexport default memo(PostForm);\n\nPostForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  postItem: PropTypes.object,\n  isView: PropTypes.bool,\n};\n","import { Row, Col, Typography, Input, Space } from 'antd';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst { Title } = Typography;\n\nconst PageHeading = props => {\n  const { handleChangeSearch = () => {}, title, hasBack = false, hasSearch = false } = props;\n  const navigate = useNavigate();\n\n  return (\n    <Row align={'middle'} justify=\"space-between\" style={{ height: '62px' }}>\n      <Col>\n        <Space>\n          {hasBack ? <ArrowLeftOutlined onClick={() => navigate(-1)} /> : null}\n\n          <Title level={4} style={{ marginBlockEnd: 0, marginInlineStart: 10 }}>\n            {title}\n          </Title>\n        </Space>\n      </Col>\n      {hasSearch ? (\n        <Col>\n          <Input placeholder=\"Search for Posts\" onChange={handleChangeSearch} />\n        </Col>\n      ) : null}\n    </Row>\n  );\n};\n\nexport default memo(PageHeading);\n\nPageHeading.propTypes = {\n  handleChangeSearch: PropTypes.func,\n  title: PropTypes.string,\n  hasBack: PropTypes.bool,\n  hasSearch: PropTypes.bool,\n};\n","export const columns = [\n  {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title',\n  },\n  {\n    title: 'Descriptions',\n    dataIndex: 'body',\n    key: 'body',\n  },\n];\n","import { Modal, theme } from 'antd';\nimport PropTypes from 'prop-types';\nimport BaseButton from 'components/button';\n\nconst { useToken } = theme;\n\nconst BaseModal = props => {\n  const {\n    isModalOpen,\n    isLoading,\n    handleCancel,\n    handleSubmit,\n    children,\n    title = '',\n    okText,\n    danger = false,\n    isDisabled = false,\n    ...rest\n  } = props;\n  const { token } = useToken();\n\n  return (\n    <Modal\n      title={title}\n      open={isModalOpen}\n      onOk={handleSubmit}\n      onCancel={handleCancel}\n      okText={okText}\n      confirmLoading={isLoading}\n      maskClosable={false}\n      footer={\n        okText\n          ? [\n              <BaseButton key=\"back\" type=\"default\" bg={token.colorLight} onClick={handleCancel} text=\"Cancel\" />,\n              <BaseButton\n                key=\"submit\"\n                type=\"primary\"\n                text={okText}\n                danger={danger}\n                loading={isLoading}\n                onClick={handleSubmit}\n                isDisabled={isDisabled}\n              />,\n            ]\n          : null\n      }\n      {...rest}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nexport default BaseModal;\n\nBaseModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  handleSubmit: PropTypes.func,\n  handleCancel: PropTypes.func,\n  isLoading: PropTypes.bool,\n  children: PropTypes.node,\n  title: PropTypes.string,\n  okText: PropTypes.string,\n  danger: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n","import { useEffect, Suspense, lazy, useCallback, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { DeleteFilled, EditFilled, EyeFilled } from '@ant-design/icons';\nimport { Spin, Row, Space, theme, Typography } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport {\n  fetchPosts,\n  setPostItem,\n  setCurrentPage,\n  setSearchTerm,\n  deletePostItem,\n  resetDeleteStatus,\n} from './store/slice';\nimport { columns } from './columns';\nimport BaseButton from 'components/button';\nimport BaseMessage from 'components/message';\nimport PageHeading from './components/page-heading';\nimport BaseModal from 'components/modal';\nimport Form from './components/form';\nconst { Text } = Typography;\n\nconst BaseTable = lazy(() => import('components/table'));\n\nconst { useToken } = theme;\n\nconst PostsPage = () => {\n  const navigate = useNavigate();\n  const { data, isLoading, currentPage, searchTerm, deleteStatus } = useSelector(state => state.postsReducer);\n  const {\n    alert: { type },\n  } = useSelector(state => state.uiReducer);\n  const dispatch = useDispatch();\n\n  const {\n    token: { colorBgContainer },\n  } = useToken();\n  const [showModal, setShowModal] = useState({ isOpen: false, id: null, item: null });\n\n  const handleClickEdit = useCallback(item => {\n    dispatch(setPostItem(item));\n    navigate(`/posts-management/post-details/${item.id}`);\n  }, []);\n\n  const handleDelete = useCallback(item => {\n    setShowModal(prev => {\n      return {\n        ...prev,\n        isOpen: !prev.isOpen,\n        id: item?.id,\n      };\n    });\n  }, []);\n  const handleClickView = useCallback(item => {\n    setShowModal(prev => {\n      return {\n        isOpen: !prev.isOpen,\n        id: item?.id,\n        item: item,\n      };\n    });\n  }, []);\n  const memoColumns = useMemo(() => {\n    const columnActions = {\n      title: 'Action',\n      key: 'operation',\n      fixed: 'right',\n      width: 150,\n      render: row => {\n        return (\n          <Row justify={'space-between'}>\n            <BaseButton className=\"btn\" type=\"text\" icon={<EyeFilled />} onClick={() => handleClickView(row)} />\n            <BaseButton className=\"btn\" type=\"text\" icon={<EditFilled />} onClick={() => handleClickEdit(row)} />\n            <BaseButton className=\"btn\" type=\"text\" icon={<DeleteFilled />} danger onClick={() => handleDelete(row)} />\n          </Row>\n        );\n      },\n    };\n    return [...columns, { ...columnActions }];\n  }, []);\n\n  useEffect(() => {\n    if (!data?.length) {\n      dispatch(fetchPosts());\n    }\n  }, [data]);\n\n  const handleCurrentPage = useCallback(\n    current => {\n      dispatch(setCurrentPage(current));\n    },\n    [dispatch]\n  );\n\n  const handleChangeSearch = useCallback(\n    event => {\n      dispatch(setSearchTerm(event.target.value));\n    },\n    [dispatch]\n  );\n\n  const handleSubmitDeletePost = () => {\n    dispatch(deletePostItem({ id: showModal.id }));\n  };\n\n  const handleCancel = () => {\n    setShowModal({\n      isOpen: false,\n      id: null,\n      item: null,\n    });\n  };\n\n  useEffect(() => {\n    if (deleteStatus === 'success') {\n      handleCancel();\n      dispatch(resetDeleteStatus());\n    }\n  }, [deleteStatus]);\n\n  const filteredPosts = useMemo(() => {\n    return data.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [searchTerm, data]);\n\n  return (\n    <Space direction=\"vertical\" style={{ background: colorBgContainer, width: '100%' }}>\n      <PageHeading title=\"Posts\" hasSearch={true} handleChangeSearch={handleChangeSearch} />\n      <Suspense fallback={<Spin />}>\n        <BaseTable\n          data={filteredPosts}\n          columns={memoColumns}\n          loading={isLoading}\n          getCurrentPage={handleCurrentPage}\n          currentPage={currentPage}\n          rowKey=\"id\"\n        />\n      </Suspense>\n      {type ? <BaseMessage /> : null}\n\n      <ModalsContainer\n        handleCancel={handleCancel}\n        handleSubmit={handleSubmitDeletePost}\n        showModal={showModal}\n        isLoading={isLoading}\n        danger={true}\n      />\n    </Space>\n  );\n};\n\nexport default PostsPage;\n\nfunction ModalsContainer(props) {\n  const { handleCancel, handleSubmit, showModal, isLoading } = props;\n\n  return (\n    <>\n      <BaseModal\n        handleCancel={handleCancel}\n        handleSubmit={handleSubmit}\n        isModalOpen={showModal.isOpen && !showModal.item}\n        okText=\"Delete\"\n        isLoading={isLoading}\n        danger={true}\n      >\n        <Text>Are you sure, you want to delete this post?</Text>\n      </BaseModal>\n\n      <BaseModal\n        handleCancel={handleCancel}\n        handleSubmit={handleSubmit}\n        isModalOpen={showModal.isOpen && !!showModal.item}\n        isLoading={isLoading}\n      >\n        <Form postItem={showModal?.item} isView={true} />\n      </BaseModal>\n    </>\n  );\n}\n\nModalsContainer.propTypes = {\n  handleCancel: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  showModal: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    item: PropTypes.object,\n    id: PropTypes.number,\n  }),\n  isLoading: PropTypes.bool,\n};\n"],"names":["BaseButton","props","_props$text","text","onClick","_props$isDisabled","isDisabled","_props$type","type","_props$loading","loading","rest","_objectWithoutProperties","_excluded","_jsx","Button","_objectSpread","disabled","children","memo","_useSelector$alert","useSelector","state","uiReducer","alert","message","_message$useMessage","_message$useMessage2","_slicedToArray","messageApi","contextHolder","useEffect","open","content","_Fragment","BaseInput","placeholder","label","_props$isRequired","isRequired","name","error","prefix","value","_props$disabled","rule","_props$inputType","inputType","suffix","Form","rules","required","validateStatus","help","Input","style","height","TextArea","PostForm","_Form$useForm","form","_useState","useState","_useState2","setDisabled","postItem","_props$handleSubmit","handleSubmit","_props$isView","isView","setFieldsValue","onFieldsChange","useCallback","onFinish","validateFields","then","values","item","catch","errorFields","filter","field","errors","length","_jsxs","layout","Space","direction","block","Col","flex","marginInline","rows","Row","gutter","align","htmlType","Title","Typography","PageHeading","_props$handleChangeSe","handleChangeSearch","title","_props$hasBack","hasBack","_props$hasSearch","hasSearch","navigate","useNavigate","justify","ArrowLeftOutlined","level","marginBlockEnd","marginInlineStart","onChange","columns","dataIndex","key","useToken","theme","isModalOpen","isLoading","handleCancel","_props$title","okText","_props$danger","danger","token","Modal","onOk","onCancel","confirmLoading","maskClosable","footer","bg","colorLight","Text","BaseTable","lazy","_useSelector","postsReducer","data","currentPage","searchTerm","deleteStatus","dispatch","useDispatch","colorBgContainer","isOpen","id","showModal","setShowModal","handleClickEdit","setPostItem","concat","handleDelete","prev","handleClickView","memoColumns","useMemo","columnActions","fixed","width","render","row","className","icon","EyeFilled","EditFilled","DeleteFilled","_toConsumableArray","fetchPosts","handleCurrentPage","current","setCurrentPage","event","setSearchTerm","target","resetDeleteStatus","filteredPosts","post","toLowerCase","includes","background","Suspense","fallback","Spin","getCurrentPage","rowKey","BaseMessage","ModalsContainer","deletePostItem","BaseModal"],"sourceRoot":""}