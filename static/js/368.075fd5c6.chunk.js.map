{"version":3,"file":"static/js/368.075fd5c6.chunk.js","mappings":"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","sources":["components/message/index.js","pages/posts/Details.jsx","pages/posts/components/page-heading.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { message } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst BaseMessage = () => {\n  const {\n    alert: { type, message: text },\n  } = useSelector(state => state.uiReducer);\n\n  const [messageApi, contextHolder] = message.useMessage();\n\n  useEffect(() => {\n    if (type === 'error' || type === 'networkError') {\n      messageApi.open({\n        type: 'error',\n        content: text,\n      });\n    }\n    if (type === 'success') {\n      messageApi.open({\n        type: 'success',\n        content: text,\n      });\n    }\n  }, [alert]);\n\n  return <>{contextHolder}</>;\n};\n\nexport default BaseMessage;\n","import { useEffect, useCallback, Suspense, lazy } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Row, Spin, Space, theme } from 'antd';\nimport { fetchPostItem, updatePostItem } from './store/slice';\nimport BaseMessage from 'components/message';\nimport PageHeading from './components/page-heading';\n\nconst Form = lazy(() => import('./components/form'));\n\nconst { useToken } = theme;\n\nconst PostDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    token: { colorBgContainer },\n  } = useToken();\n\n  const { postItem, isLoading } = useSelector(state => state.postsReducer);\n  const {\n    alert: { type },\n  } = useSelector(state => state.uiReducer);\n\n  useEffect(() => {\n    if (!postItem) {\n      dispatch(fetchPostItem({ id }));\n    }\n  }, [postItem]);\n\n  useEffect(() => {\n    if (type === 'success') {\n      navigate(-1);\n    }\n  }, [type]);\n\n  const handleSubmit = useCallback(\n    values => {\n      dispatch(updatePostItem({ id, values }));\n    },\n    [dispatch]\n  );\n  if (isLoading) {\n    return (\n      <Row align={'middle'} justify=\"center\">\n        <Spin />\n      </Row>\n    );\n  }\n  return (\n    <Space direction=\"vertical\" style={{ background: colorBgContainer, width: '100%', padding: '0 15px 15px' }}>\n      <PageHeading title=\"Post Details\" hasBack={true} />\n      <Suspense fallback={<Spin />}>\n        <Form postItem={postItem} handleSubmit={handleSubmit} />\n      </Suspense>\n      {type ? <BaseMessage /> : null}\n    </Space>\n  );\n};\n\nexport default PostDetails;\n","import { Row, Col, Typography, Input, Space } from 'antd';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst { Title } = Typography;\n\nconst PageHeading = props => {\n  const { handleChangeSearch = () => {}, title, hasBack = false, hasSearch = false } = props;\n  const navigate = useNavigate();\n\n  return (\n    <Row align={'middle'} justify=\"space-between\" style={{ height: '62px' }}>\n      <Col>\n        <Space>\n          {hasBack ? <ArrowLeftOutlined onClick={() => navigate(-1)} /> : null}\n\n          <Title level={4} style={{ marginBlockEnd: 0, marginInlineStart: 10 }}>\n            {title}\n          </Title>\n        </Space>\n      </Col>\n      {hasSearch ? (\n        <Col>\n          <Input placeholder=\"Search for Posts\" onChange={handleChangeSearch} />\n        </Col>\n      ) : null}\n    </Row>\n  );\n};\n\nexport default memo(PageHeading);\n\nPageHeading.propTypes = {\n  handleChangeSearch: PropTypes.func,\n  title: PropTypes.string,\n  hasBack: PropTypes.bool,\n  hasSearch: PropTypes.bool,\n};\n"],"names":["_useSelector$alert","useSelector","state","uiReducer","alert","type","text","message","_message$useMessage","_message$useMessage2","_slicedToArray","messageApi","contextHolder","useEffect","open","content","_jsx","_Fragment","children","Form","lazy","useToken","theme","id","useParams","navigate","useNavigate","dispatch","useDispatch","colorBgContainer","token","_useSelector","postsReducer","postItem","isLoading","fetchPostItem","handleSubmit","useCallback","values","updatePostItem","Row","align","justify","Spin","_jsxs","Space","direction","style","background","width","padding","PageHeading","title","hasBack","Suspense","fallback","BaseMessage","Title","Typography","props","_props$handleChangeSe","handleChangeSearch","_props$hasBack","_props$hasSearch","hasSearch","height","Col","ArrowLeftOutlined","onClick","level","marginBlockEnd","marginInlineStart","Input","placeholder","onChange","memo"],"sourceRoot":""}